# -*- coding: utf-8 -*-
"""HIT137_Assignment2_3Ans_Nafisa.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ESKua1yHBda-tc24c1NNi2nshc84Nirx
"""

# recursive_polygon.py
import turtle

def draw_fractal_edge(t, length, depth):

    if depth == 0:
        t.forward(length)
    else:
        new_length = length / 3
        draw_fractal_edge(t, new_length, depth - 1)   # first segment
        t.left(60)                                   # turn inward
        draw_fractal_edge(t, new_length, depth - 1)  # second segment
        t.right(120)                                 # inward turn
        draw_fractal_edge(t, new_length, depth - 1)  # third segment
        t.left(60)                                   # straighten
        draw_fractal_edge(t, new_length, depth - 1)  # fourth segment

def draw_recursive_polygon(t, sides, length, depth):

    angle = 360 / sides
    for _ in range(sides):
        draw_fractal_edge(t, length, depth)
        t.right(angle)

def main():
    # Prompt user for input
    sides = int(input("Enter the number of sides: "))
    length = float(input("Enter the side length (pixels): "))
    depth = int(input("Enter the recursion depth: "))

    # Setup turtle
    screen = turtle.Screen()
    screen.bgcolor("black")
    t = turtle.Turtle()
    t.speed(0)
    t.color("cyan")
    t.penup()
    t.goto(-length/2, length/2)  # Center polygon
    t.pendown()

    # Draw the pattern
    draw_recursive_polygon(t, sides, length, depth)

    t.hideturtle()
    screen.mainloop()

if __name__ == "__main__":
    main()